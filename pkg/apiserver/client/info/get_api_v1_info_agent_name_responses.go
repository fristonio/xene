// Code generated by go-swagger; DO NOT EDIT.

package info

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fristonio/xene/pkg/apiserver/models"
)

// GetAPIV1InfoAgentNameReader is a Reader for the GetAPIV1InfoAgentName structure.
type GetAPIV1InfoAgentNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAPIV1InfoAgentNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAPIV1InfoAgentNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAPIV1InfoAgentNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAPIV1InfoAgentNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAPIV1InfoAgentNameOK creates a GetAPIV1InfoAgentNameOK with default headers values
func NewGetAPIV1InfoAgentNameOK() *GetAPIV1InfoAgentNameOK {
	return &GetAPIV1InfoAgentNameOK{}
}

/*GetAPIV1InfoAgentNameOK handles this case with default header values.

OK
*/
type GetAPIV1InfoAgentNameOK struct {
	Payload *models.ResponseAgentVerboseInfo
}

func (o *GetAPIV1InfoAgentNameOK) Error() string {
	return fmt.Sprintf("[GET /api/v1/info/agent/{name}][%d] getApiV1InfoAgentNameOK  %+v", 200, o.Payload)
}

func (o *GetAPIV1InfoAgentNameOK) GetPayload() *models.ResponseAgentVerboseInfo {
	return o.Payload
}

func (o *GetAPIV1InfoAgentNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseAgentVerboseInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1InfoAgentNameBadRequest creates a GetAPIV1InfoAgentNameBadRequest with default headers values
func NewGetAPIV1InfoAgentNameBadRequest() *GetAPIV1InfoAgentNameBadRequest {
	return &GetAPIV1InfoAgentNameBadRequest{}
}

/*GetAPIV1InfoAgentNameBadRequest handles this case with default header values.

Bad Request
*/
type GetAPIV1InfoAgentNameBadRequest struct {
	Payload *models.ResponseHTTPError
}

func (o *GetAPIV1InfoAgentNameBadRequest) Error() string {
	return fmt.Sprintf("[GET /api/v1/info/agent/{name}][%d] getApiV1InfoAgentNameBadRequest  %+v", 400, o.Payload)
}

func (o *GetAPIV1InfoAgentNameBadRequest) GetPayload() *models.ResponseHTTPError {
	return o.Payload
}

func (o *GetAPIV1InfoAgentNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAPIV1InfoAgentNameInternalServerError creates a GetAPIV1InfoAgentNameInternalServerError with default headers values
func NewGetAPIV1InfoAgentNameInternalServerError() *GetAPIV1InfoAgentNameInternalServerError {
	return &GetAPIV1InfoAgentNameInternalServerError{}
}

/*GetAPIV1InfoAgentNameInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetAPIV1InfoAgentNameInternalServerError struct {
	Payload *models.ResponseHTTPError
}

func (o *GetAPIV1InfoAgentNameInternalServerError) Error() string {
	return fmt.Sprintf("[GET /api/v1/info/agent/{name}][%d] getApiV1InfoAgentNameInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAPIV1InfoAgentNameInternalServerError) GetPayload() *models.ResponseHTTPError {
	return o.Payload
}

func (o *GetAPIV1InfoAgentNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
