// Code generated by go-swagger; DO NOT EDIT.

package auth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fristonio/xene/pkg/apiserver/models"
)

// GetOauthProviderRedirectReader is a Reader for the GetOauthProviderRedirect structure.
type GetOauthProviderRedirectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOauthProviderRedirectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOauthProviderRedirectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetOauthProviderRedirectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetOauthProviderRedirectOK creates a GetOauthProviderRedirectOK with default headers values
func NewGetOauthProviderRedirectOK() *GetOauthProviderRedirectOK {
	return &GetOauthProviderRedirectOK{}
}

/*GetOauthProviderRedirectOK handles this case with default header values.

OK
*/
type GetOauthProviderRedirectOK struct {
	Payload *models.ResponseJWTAuth
}

func (o *GetOauthProviderRedirectOK) Error() string {
	return fmt.Sprintf("[GET /oauth/:provider/redirect][%d] getOauthProviderRedirectOK  %+v", 200, o.Payload)
}

func (o *GetOauthProviderRedirectOK) GetPayload() *models.ResponseJWTAuth {
	return o.Payload
}

func (o *GetOauthProviderRedirectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseJWTAuth)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOauthProviderRedirectInternalServerError creates a GetOauthProviderRedirectInternalServerError with default headers values
func NewGetOauthProviderRedirectInternalServerError() *GetOauthProviderRedirectInternalServerError {
	return &GetOauthProviderRedirectInternalServerError{}
}

/*GetOauthProviderRedirectInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetOauthProviderRedirectInternalServerError struct {
	Payload *models.ResponseHTTPError
}

func (o *GetOauthProviderRedirectInternalServerError) Error() string {
	return fmt.Sprintf("[GET /oauth/:provider/redirect][%d] getOauthProviderRedirectInternalServerError  %+v", 500, o.Payload)
}

func (o *GetOauthProviderRedirectInternalServerError) GetPayload() *models.ResponseHTTPError {
	return o.Payload
}

func (o *GetOauthProviderRedirectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
