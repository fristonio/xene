// Code generated by go-swagger; DO NOT EDIT.

package registry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetAPIV1RegistryAgentParams creates a new GetAPIV1RegistryAgentParams object
// with the default values initialized.
func NewGetAPIV1RegistryAgentParams() *GetAPIV1RegistryAgentParams {
	var ()
	return &GetAPIV1RegistryAgentParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetAPIV1RegistryAgentParamsWithTimeout creates a new GetAPIV1RegistryAgentParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetAPIV1RegistryAgentParamsWithTimeout(timeout time.Duration) *GetAPIV1RegistryAgentParams {
	var ()
	return &GetAPIV1RegistryAgentParams{

		timeout: timeout,
	}
}

// NewGetAPIV1RegistryAgentParamsWithContext creates a new GetAPIV1RegistryAgentParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetAPIV1RegistryAgentParamsWithContext(ctx context.Context) *GetAPIV1RegistryAgentParams {
	var ()
	return &GetAPIV1RegistryAgentParams{

		Context: ctx,
	}
}

// NewGetAPIV1RegistryAgentParamsWithHTTPClient creates a new GetAPIV1RegistryAgentParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetAPIV1RegistryAgentParamsWithHTTPClient(client *http.Client) *GetAPIV1RegistryAgentParams {
	var ()
	return &GetAPIV1RegistryAgentParams{
		HTTPClient: client,
	}
}

/*GetAPIV1RegistryAgentParams contains all the parameters to send to the API endpoint
for the get API v1 registry agent operation typically these are written to a http.Request
*/
type GetAPIV1RegistryAgentParams struct {

	/*Name
	  name of the agent to get.

	*/
	Name *string
	/*Prefix
	  Prefix based get for agent.

	*/
	Prefix *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get API v1 registry agent params
func (o *GetAPIV1RegistryAgentParams) WithTimeout(timeout time.Duration) *GetAPIV1RegistryAgentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get API v1 registry agent params
func (o *GetAPIV1RegistryAgentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get API v1 registry agent params
func (o *GetAPIV1RegistryAgentParams) WithContext(ctx context.Context) *GetAPIV1RegistryAgentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get API v1 registry agent params
func (o *GetAPIV1RegistryAgentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get API v1 registry agent params
func (o *GetAPIV1RegistryAgentParams) WithHTTPClient(client *http.Client) *GetAPIV1RegistryAgentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get API v1 registry agent params
func (o *GetAPIV1RegistryAgentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the get API v1 registry agent params
func (o *GetAPIV1RegistryAgentParams) WithName(name *string) *GetAPIV1RegistryAgentParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get API v1 registry agent params
func (o *GetAPIV1RegistryAgentParams) SetName(name *string) {
	o.Name = name
}

// WithPrefix adds the prefix to the get API v1 registry agent params
func (o *GetAPIV1RegistryAgentParams) WithPrefix(prefix *string) *GetAPIV1RegistryAgentParams {
	o.SetPrefix(prefix)
	return o
}

// SetPrefix adds the prefix to the get API v1 registry agent params
func (o *GetAPIV1RegistryAgentParams) SetPrefix(prefix *string) {
	o.Prefix = prefix
}

// WriteToRequest writes these params to a swagger request
func (o *GetAPIV1RegistryAgentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Name != nil {

		// query param name
		var qrName string
		if o.Name != nil {
			qrName = *o.Name
		}
		qName := qrName
		if qName != "" {
			if err := r.SetQueryParam("name", qName); err != nil {
				return err
			}
		}

	}

	if o.Prefix != nil {

		// query param prefix
		var qrPrefix string
		if o.Prefix != nil {
			qrPrefix = *o.Prefix
		}
		qPrefix := qrPrefix
		if qPrefix != "" {
			if err := r.SetQueryParam("prefix", qPrefix); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
