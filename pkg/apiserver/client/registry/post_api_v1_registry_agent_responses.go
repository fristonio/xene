// Code generated by go-swagger; DO NOT EDIT.

package registry

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/fristonio/xene/pkg/apiserver/models"
)

// PostAPIV1RegistryAgentReader is a Reader for the PostAPIV1RegistryAgent structure.
type PostAPIV1RegistryAgentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostAPIV1RegistryAgentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostAPIV1RegistryAgentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostAPIV1RegistryAgentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostAPIV1RegistryAgentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostAPIV1RegistryAgentOK creates a PostAPIV1RegistryAgentOK with default headers values
func NewPostAPIV1RegistryAgentOK() *PostAPIV1RegistryAgentOK {
	return &PostAPIV1RegistryAgentOK{}
}

/*PostAPIV1RegistryAgentOK handles this case with default header values.

OK
*/
type PostAPIV1RegistryAgentOK struct {
	Payload *models.ResponseHTTPMessage
}

func (o *PostAPIV1RegistryAgentOK) Error() string {
	return fmt.Sprintf("[POST /api/v1/registry/agent][%d] postApiV1RegistryAgentOK  %+v", 200, o.Payload)
}

func (o *PostAPIV1RegistryAgentOK) GetPayload() *models.ResponseHTTPMessage {
	return o.Payload
}

func (o *PostAPIV1RegistryAgentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseHTTPMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1RegistryAgentBadRequest creates a PostAPIV1RegistryAgentBadRequest with default headers values
func NewPostAPIV1RegistryAgentBadRequest() *PostAPIV1RegistryAgentBadRequest {
	return &PostAPIV1RegistryAgentBadRequest{}
}

/*PostAPIV1RegistryAgentBadRequest handles this case with default header values.

Bad Request
*/
type PostAPIV1RegistryAgentBadRequest struct {
	Payload *models.ResponseHTTPError
}

func (o *PostAPIV1RegistryAgentBadRequest) Error() string {
	return fmt.Sprintf("[POST /api/v1/registry/agent][%d] postApiV1RegistryAgentBadRequest  %+v", 400, o.Payload)
}

func (o *PostAPIV1RegistryAgentBadRequest) GetPayload() *models.ResponseHTTPError {
	return o.Payload
}

func (o *PostAPIV1RegistryAgentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostAPIV1RegistryAgentInternalServerError creates a PostAPIV1RegistryAgentInternalServerError with default headers values
func NewPostAPIV1RegistryAgentInternalServerError() *PostAPIV1RegistryAgentInternalServerError {
	return &PostAPIV1RegistryAgentInternalServerError{}
}

/*PostAPIV1RegistryAgentInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostAPIV1RegistryAgentInternalServerError struct {
	Payload *models.ResponseHTTPError
}

func (o *PostAPIV1RegistryAgentInternalServerError) Error() string {
	return fmt.Sprintf("[POST /api/v1/registry/agent][%d] postApiV1RegistryAgentInternalServerError  %+v", 500, o.Payload)
}

func (o *PostAPIV1RegistryAgentInternalServerError) GetPayload() *models.ResponseHTTPError {
	return o.Payload
}

func (o *PostAPIV1RegistryAgentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResponseHTTPError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
