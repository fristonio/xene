basePath: /
definitions:
  response.HTTPError:
    properties:
      error:
        example: Invalid authentication type provided.
        type: string
    type: object
  response.HTTPMessage:
    properties:
      message:
        example: Messsage in response to your request
        type: string
    type: object
  response.JWTAuth:
    properties:
      expiresIn:
        example: "3600"
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        type: string
      userEmail:
        example: example@example.com
        type: string
      userName:
        example: fristonio
        type: string
    type: object
  response.OauthLogin:
    properties:
      loginURL:
        description: LoginURL is the URL to be used for logging in.
        example: https://xxxx.io/login
        type: string
    type: object
  response.RegistryItem:
    properties:
      item:
        example: Workflow Document
        type: string
    type: object
  response.RegistryItemsFromPrefix:
    properties:
      count:
        example: 2
        type: integer
      items:
        type: string
    type: object
host: localhost:6060
info:
  contact:
    email: deepeshpathak09@gmail.com
    name: Deepesh Pathak
    url: https://dpathak.co
  description: Xene is the workflow creator and manager tool
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Xene API server
  version: 0.1.0
paths:
  /api/v1/authok:
    get:
      consumes:
      - application/json
      description: auth OK handler handles the ping to api routes which are
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.HTTPMessage'
      summary: Handles ping event for api routes.
      tags:
      - api
  /api/v1/registry/agent:
    get:
      consumes:
      - application/json
      description: If a name is provided return the corresponding agent object, if
        prefix is set to some value
      parameters:
      - description: Prefix based get for agent.
        in: query
        name: prefix
        type: string
      - description: name of the agent to get.
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RegistryItem'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      summary: Returns the specified agent object from the store.
      tags:
      - registry
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: Agent manifest to be created.
        in: formData
        name: agent
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.HTTPMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      summary: Creates a new agent in the store.
      tags:
      - registry
  /api/v1/registry/agent/{name}:
    delete:
      consumes:
      - application/json
      description: Deletes the agent specified by the name parameter, if the agent
        is not
      parameters:
      - description: Name of the agent to be deleted.
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.HTTPMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      summary: Deletes the specified agent from the store.
      tags:
      - registry
    get:
      consumes:
      - application/json
      parameters:
      - description: name of the agent to get.
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RegistryItem'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      summary: Returns the specified agent object from the store with the name in
        params.
      tags:
      - registry
    patch:
      consumes:
      - application/json
      parameters:
      - description: Name of the agent to be patched.
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
      summary: Patches the specified agent from the store.
      tags:
      - registry
  /api/v1/registry/workflow:
    get:
      consumes:
      - application/json
      description: If a name is provided return the corresponding workflow object,
        if prefix  is set to some value
      parameters:
      - description: Prefix based get for workflow.
        in: query
        name: prefix
        type: string
      - description: name of the workflow to get.
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RegistryItem'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      summary: Returns the specified workflow object from the store.
      tags:
      - registry
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: This route creates a new workflow for xene to operate on, if the
        workflow already exists
      parameters:
      - description: Workflow manifest to be created.
        in: formData
        name: workflow
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.HTTPMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      summary: Creates a new workflow in the store.
      tags:
      - registry
  /api/v1/registry/workflow/{name}:
    delete:
      consumes:
      - application/json
      description: Deletes the workflow specified by the name parameter, if the workflow
        is not
      parameters:
      - description: Name of the workflow to be deleted.
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.HTTPMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      summary: Deletes the specified workflow from the store.
      tags:
      - registry
    get:
      consumes:
      - application/json
      parameters:
      - description: name of the workflow to get.
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RegistryItem'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      summary: Returns the specified workflow object from the store with the name
        in params.
      tags:
      - registry
    patch:
      consumes:
      - application/json
      parameters:
      - description: Name of the workflow to be patched.
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
      summary: Patches the specified workflow from the store.
      tags:
      - registry
  /health:
    get:
      consumes:
      - application/json
      description: Returns the health status of the API server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.HTTPMessage'
      summary: Health route for Xene API server.
      tags:
      - health
  /oauth/:provider:
    get:
      consumes:
      - application/json
      description: Log in to xene using the configured oauth providers that xene supports.
      parameters:
      - description: Provider for oauth login
        in: query
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.OauthLogin'
      summary: Handles login for xene
      tags:
      - auth
  /oauth/:provider/redirect:
    get:
      consumes:
      - application/json
      description: redirectHandler handles the redirect from the Oauth provider after
        the authentication process has
      parameters:
      - description: Provider for the oauth redirect
        in: query
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JWTAuth'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      summary: Handles redirect from the login oauth provider.
      tags:
      - auth
  /oauth/refresh/:
    get:
      consumes:
      - application/json
      description: Handles authentication token refresh
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JWTAuth'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      summary: Handle authentication token refresh for the oauth provider.
      tags:
      - auth
securityDefinitions:
  BasicAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
