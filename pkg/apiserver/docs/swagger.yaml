basePath: /
definitions:
  response.AgentInfo:
    properties:
      address:
        type: string
      available:
        type: boolean
      name:
        type: string
      secure:
        type: boolean
    type: object
  response.AgentSecretInfo:
    properties:
      name:
        type: string
      type:
        type: string
    type: object
  response.AgentTriggerInfo:
    properties:
      name:
        type: string
      pipelines:
        items:
          type: string
        type: array
    type: object
  response.AgentVerboseInfo:
    properties:
      address:
        type: string
      healthy:
        type: boolean
      name:
        type: string
      secrets:
        items:
          $ref: '#/definitions/response.AgentSecretInfo'
        type: array
      secure:
        type: boolean
      serverName:
        type: string
      workflows:
        items:
          $ref: '#/definitions/response.AgentWorkflowInfo'
        type: array
    type: object
  response.AgentWorkflowInfo:
    properties:
      name:
        type: string
      triggers:
        items:
          $ref: '#/definitions/response.AgentTriggerInfo'
        type: array
    type: object
  response.HTTPError:
    properties:
      error:
        example: Invalid authentication type provided.
        type: string
    type: object
  response.HTTPMessage:
    properties:
      message:
        example: Messsage in response to your request
        type: string
    type: object
  response.JWTAuth:
    properties:
      expiresIn:
        example: "3600"
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
        type: string
      userEmail:
        example: example@example.com
        type: string
      userName:
        example: fristonio
        type: string
    type: object
  response.KVPair:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  response.OauthLogin:
    properties:
      loginURL:
        description: LoginURL is the URL to be used for logging in.
        example: https://xxxx.io/login
        type: string
    type: object
  response.PipelineInfo:
    properties:
      name:
        type: string
      runs:
        items:
          $ref: '#/definitions/response.PipelineRunInfo'
        type: array
      spec:
        type: string
      warnings:
        items:
          type: string
        type: array
      workflow:
        type: string
    type: object
  response.PipelineRunInfo:
    properties:
      agent:
        type: string
      endTime:
        type: integer
      runID:
        type: string
      startTime:
        type: integer
      status:
        type: string
    type: object
  response.PipelineRunVerboseInfo:
    properties:
      baseLogURL:
        type: string
      runID:
        type: string
      runInfo:
        type: string
      status:
        type: string
    type: object
  response.RegistryItem:
    properties:
      item:
        $ref: '#/definitions/response.KVPair'
        description: Items contains the Serialized kvstore item
        type: object
    type: object
  response.RegistryItemsFromPrefix:
    properties:
      count:
        example: 2
        type: integer
      items:
        description: Items contains the Serialized kvstore items
        items:
          $ref: '#/definitions/response.KVPair'
        type: array
    type: object
  response.SecretInfo:
    properties:
      name:
        type: string
      restricted:
        type: boolean
      type:
        type: string
    type: object
  response.WorkflowInfo:
    properties:
      agents:
        items:
          type: string
        type: array
      name:
        type: string
      pipelines:
        items:
          type: string
        type: array
      triggers:
        items:
          type: string
        type: array
    type: object
host: localhost:6060
info:
  contact:
    email: deepeshpathak09@gmail.com
    name: Deepesh Pathak
    url: https://dpathak.co
  description: Xene is the workflow creator and manager tool
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Xene API server
  version: 0.1.0
paths:
  /api/v1/authok:
    get:
      consumes:
      - application/json
      description: auth OK handler handles the ping to api routes which are
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.HTTPMessage'
      security:
      - ApiKeyAuth: []
      summary: Handles ping event for api routes.
      tags:
      - api
  /api/v1/info/agent/{name}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Name of the agent to get information about.
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.AgentVerboseInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Returns verbose information about the agent.
      tags:
      - info
  /api/v1/info/workflow/{workflow}/pipeline/{pipeline}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Name of the workflow to get information about.
        in: path
        name: workflow
        required: true
        type: string
      - description: Name of the pipeline to return the info about.
        in: path
        name: pipeline
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PipelineInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Returns verbose information about a workflow.
      tags:
      - info
  /api/v1/info/workflow/{workflow}/pipeline/{pipeline}/runs/{runID}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Name of the workflow to get information about.
        in: path
        name: workflow
        required: true
        type: string
      - description: Name of the pipeline to return the info about.
        in: path
        name: pipeline
        required: true
        type: string
      - description: RUN ID of the pipeline run.
        in: path
        name: runID
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.PipelineRunVerboseInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Returns verbose information about a pipeline run.
      tags:
      - info
  /api/v1/info/workflow/{workflow}/pipeline/{pipeline}/spec:
    get:
      consumes:
      - application/json
      parameters:
      - description: Name of the workflow to get information about.
        in: path
        name: workflow
        required: true
        type: string
      - description: Name of the pipeline to return the info about.
        in: path
        name: pipeline
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RegistryItem'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Returns spec of the provided workflow pipeline.
      tags:
      - info
  /api/v1/registry/agent:
    get:
      consumes:
      - application/json
      description: If a name is provided return the corresponding agent object, if prefix is set to some value
      parameters:
      - description: Prefix based get for agent.
        in: query
        name: prefix
        type: string
      - description: name of the agent to get.
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RegistryItem'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Returns the specified agent object from the store.
      tags:
      - registry
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: Agent manifest to be created.
        in: formData
        name: agent
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.HTTPMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Creates a new agent in the store.
      tags:
      - registry
  /api/v1/registry/agent/{name}:
    delete:
      consumes:
      - application/json
      description: Deletes the agent specified by the name parameter, if the agent is not
      parameters:
      - description: Name of the agent to be deleted.
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.HTTPMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Deletes the specified agent from the store.
      tags:
      - registry
    get:
      consumes:
      - application/json
      parameters:
      - description: name of the agent to get.
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RegistryItem'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Returns the specified agent object from the store with the name in params.
      tags:
      - registry
    patch:
      consumes:
      - application/json
      parameters:
      - description: Name of the agent to be patched.
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Patches the specified agent from the store.
      tags:
      - registry
  /api/v1/registry/list/agents:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.AgentInfo'
            type: array
      security:
      - ApiKeyAuth: []
      summary: List all the keys of items in the registry of the provided type agent.
      tags:
      - registry
  /api/v1/registry/list/secrets:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.SecretInfo'
            type: array
      security:
      - ApiKeyAuth: []
      summary: List all the keys of items in the registry of the provided type agent.
      tags:
      - registry
  /api/v1/registry/list/workflows:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.WorkflowInfo'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Gather information about all the workflow objects managed by xene.
      tags:
      - registry
  /api/v1/registry/secret:
    get:
      consumes:
      - application/json
      description: If a name is provided return the corresponding secret object, if prefix is set to some value
      parameters:
      - description: Prefix based get for secret.
        in: query
        name: prefix
        type: string
      - description: name of the secret to get.
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RegistryItem'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Returns the specified secret object from the store.
      tags:
      - registry
    post:
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - description: secret manifest to be created.
        in: formData
        name: secret
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.HTTPMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Creates a new secret in the store.
      tags:
      - registry
  /api/v1/registry/secret/{name}:
    delete:
      consumes:
      - application/json
      description: Deletes the secret specified by the name parameter, if the secret is not
      parameters:
      - description: Name of the secret to be deleted.
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.HTTPMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Deletes the specified secret from the store.
      tags:
      - registry
    get:
      consumes:
      - application/json
      parameters:
      - description: name of the secret to get.
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RegistryItem'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Returns the specified secret object from the store with the name in params.
      tags:
      - registry
    patch:
      consumes:
      - application/json
      parameters:
      - description: Name of the secret to be patched.
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Patches the specified secret from the store.
      tags:
      - registry
  /api/v1/registry/workflow:
    get:
      consumes:
      - application/json
      description: If a name is provided return the corresponding workflow object, if prefix  is set to some value
      parameters:
      - description: Prefix based get for workflow.
        in: query
        name: prefix
        type: string
      - description: name of the workflow to get.
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RegistryItem'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Returns the specified workflow object from the store.
      tags:
      - registry
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: This route creates a new workflow for xene to operate on, if the workflow already exists
      parameters:
      - description: Workflow manifest to be created.
        in: formData
        name: workflow
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.HTTPMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Creates a new workflow in the store.
      tags:
      - registry
  /api/v1/registry/workflow/{name}:
    delete:
      consumes:
      - application/json
      description: Deletes the workflow specified by the name parameter, if the workflow is not
      parameters:
      - description: Name of the workflow to be deleted.
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.HTTPMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Deletes the specified workflow from the store.
      tags:
      - registry
    get:
      consumes:
      - application/json
      parameters:
      - description: name of the workflow to get.
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RegistryItem'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Returns the specified workflow object from the store with the name in params.
      tags:
      - registry
    patch:
      consumes:
      - application/json
      parameters:
      - description: Name of the workflow to be patched.
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Patches the specified workflow from the store.
      tags:
      - registry
  /api/v1/status/workflow:
    get:
      consumes:
      - application/json
      parameters:
      - description: Prefix based get for workflow status documents.
        in: query
        name: prefix
        type: string
      - description: name of the workflow to get status object for.
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RegistryItem'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Returns the specified workflowStatus object from the store.
      tags:
      - status
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: This route creates a new workflow status for xene to operate on, if the workflow already exists
      parameters:
      - description: WorkflowStatus manifest to be created.
        in: formData
        name: workflow
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.HTTPMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Creates a new workflow status in the store.
      tags:
      - status
  /api/v1/status/workflow/{name}:
    delete:
      consumes:
      - application/json
      description: Deletes the workflow status specified by the name parameter, if the workflow is not
      parameters:
      - description: Name of the workflow status to be deleted.
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.HTTPMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Deletes the specified workflow from the store.
      tags:
      - status
    get:
      consumes:
      - application/json
      parameters:
      - description: name of the workflow to get status document for.
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.RegistryItem'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Returns the specified workflow object from the store with the name in params.
      tags:
      - status
    patch:
      consumes:
      - application/json
      parameters:
      - description: Name of the workflow status to be patched.
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Patches the specified workflow status from the store.
      tags:
      - registry
  /api/v1/webhook/trigger/{workflow}/pipeline/{pipeline}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Name of the workflow.
        in: path
        name: workflow
        required: true
        type: string
      - description: Name of the pipeline to be triggered.
        in: path
        name: pipeline
        required: true
        type: string
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.HTTPError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      security:
      - ApiKeyAuth: []
      summary: Webhook endpoints to trigger the pipelines of a particular workflow.
      tags:
      - webhook
  /health:
    get:
      consumes:
      - application/json
      description: Returns the health status of the API server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.HTTPMessage'
      summary: Health route for Xene API server.
      tags:
      - health
  /oauth/:provider:
    get:
      consumes:
      - application/json
      description: Log in to xene using the configured oauth providers that xene supports.
      parameters:
      - description: Provider for oauth login
        in: query
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.OauthLogin'
      summary: Handles login for xene
      tags:
      - auth
  /oauth/:provider/redirect:
    get:
      consumes:
      - application/json
      description: redirectHandler handles the redirect from the Oauth provider after the authentication process has
      parameters:
      - description: Provider for the oauth redirect
        in: query
        name: provider
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JWTAuth'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      summary: Handles redirect from the login oauth provider.
      tags:
      - auth
  /oauth/refresh/:
    get:
      consumes:
      - application/json
      description: Handles authentication token refresh
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.JWTAuth'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.HTTPError'
      summary: Handle authentication token refresh for the oauth provider.
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
